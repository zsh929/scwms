/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sclk.scwms.web.action;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.sclk.scwms.model.SystemLog;
import com.sclk.scwms.model.Users;
import com.sclk.scwms.service.CargoManager;
import com.sclk.scwms.service.SystemLogManager;
import com.sclk.scwms.service.UserManager;
import com.sclk.scwms.web.form.LoginForm;

/** 
 * MyEclipse Struts
 * Creation date: 03-24-2010
 * 
 * XDoclet definition:
 * @struts.action path="/customer" name="customerForm" input="/jsp/customer.jsp" scope="request" validate="true"
 */
public class LoginAction extends BaseAction {
	
	private CargoManager manager;

    public void setManager(CargoManager manager) {
    	this.manager = manager;
    }
    
    private UserManager userManager;

    public void setUserManager(UserManager userManager) {
    	this.userManager = userManager;
    }
    
    private SystemLogManager systemLogManager;
    
    public void setSystemLogManager(SystemLogManager systemLogManager) {
		this.systemLogManager = systemLogManager;
	}
	/*
	 * Generated Methods
	 */

	

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward view(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginForm = (LoginForm) form;// TODO Auto-generated method stub
		
		
		
		return mapping.findForward("view");
		
	}
	
	public ActionForward check(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginForm = (LoginForm) form;// TODO Auto-generated method stub
		Users user = new Users();
		String userName = loginForm.getUserName();
		String password = loginForm.getPassword();
		
		if(userName == null || userName.equals("") || password == null || password.equals("")){
			request.setAttribute("message", "请输入您的用户名或密码!");
			return mapping.findForward("failed");
		}
		
		user = userManager.loginValidate(userName, password);
		
		if(user != null){
			HttpSession session = request.getSession();
			
			String loginAddress = request.getRemoteAddr();
			Date loginTime = new Date();
			String operationContent = "用户登录";
			
			SystemLog systemLog = null;
			
			if(systemLogManager.getSystemLog(session.getId()) != null){
				systemLog = systemLogManager.getSystemLog(session.getId());
			}else{
				
				systemLog = new SystemLog();
			}
			
						
			systemLog.setUserName(userName);
			systemLog.setType("1");
			systemLog.setLoginAddress(loginAddress);
		    systemLog.setOperationTime(loginTime);
		    systemLog.setOperationContent(operationContent);
		    systemLog.setSessionId(session.getId());
		    
		    systemLogManager.sava(systemLog);
		    
		    user.setLoginAddress(loginAddress);
		    user.setLoginTime(loginTime);
		    user.setSessionId(session.getId());
			session.setAttribute("user",user);
			
			ServletContext application = session.getServletContext();
			List<Users> onlineUserList = (List<Users>) application.getAttribute("onlineUserList");
				
			if(onlineUserList == null){
				onlineUserList = new ArrayList<Users>();
				application.setAttribute("onlineUserList",onlineUserList);
	        }
			
			boolean j = true;
			
			for(int i = 0;i < onlineUserList.size();i++){
				Users u = onlineUserList.get(i);
				if(u.getSessionId().equals(user.getSessionId()) ){
					onlineUserList.set(i, user);				   
					j = false;
					break;
				}				
			}
			if(j){
				onlineUserList.add(user);
			}
			
			return mapping.findForward("success");
		}
		
		request.setAttribute("message", "用户名或密码输入错误!");
		return mapping.findForward("failed");
		
	}
}