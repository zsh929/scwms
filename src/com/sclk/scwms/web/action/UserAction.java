/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sclk.scwms.web.action;

import java.io.UnsupportedEncodingException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.sclk.scwms.service.UserManager;
import com.sclk.scwms.web.form.UserForm;

/** 
 * MyEclipse Struts
 * Creation date: 03-24-2010
 * 
 * XDoclet definition:
 * @struts.action path="/customer" name="customerForm" input="/jsp/customer.jsp" scope="request" validate="true"
 */
public class UserAction extends BaseAction {
	
	private UserManager manager;

    public void setManager(UserManager manager) {
    	this.manager = manager;
    }
    
    
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward view(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
		
		List list = manager.getUsers();
		
		request.setAttribute("user.list", list);
		
		return mapping.findForward("view");
		
	}
	
	public ActionForward item(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
		
		List list = manager.getUsers();
		
		request.setAttribute("user.list", list);
		
		return mapping.findForward("item");
		
	}
	
	public ActionForward query(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws UnsupportedEncodingException {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
		String keyword = request.getParameter("keyword");
		
		if(keyword!=null){
			keyword = new String(keyword.getBytes("ISO8859_1"),"utf-8");
		}
		
		List list = manager.findBykeyword(keyword);
		
		request.setAttribute("user.list", list);
		request.setAttribute("keyword",keyword);
		return mapping.findForward("query");
		
	}
}