/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sclk.scwms.web.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.sclk.scwms.common.StringUtil;
import com.sclk.scwms.model.Users;
import com.sclk.scwms.service.SyscodeManager;
import com.sclk.scwms.service.UserManager;
import com.sclk.scwms.web.form.UserEditForm;

/** 
 * MyEclipse Struts
 * Creation date: 03-23-2010
 * 
 * XDoclet definition:
 * @struts.action path="/customer" name="customerForm" input="/jsp/customer.jsp" parameter="method" scope="request" validate="true"
 * @struts.action-forward name="init" path="/jsp/customer.jsp"
 */
public class UserEditAction extends BaseAction {
	
	private UserManager manager;

    public void setManager(UserManager manager) {
    	this.manager = manager;
    }
    private SyscodeManager scmanager;

    public void setScmanager(SyscodeManager manager) {
    	this.scmanager = manager;
    }
    
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserEditForm userEditForm = (UserEditForm) form;// TODO Auto-generated method stub
		
		String id  = request.getParameter("id");
		
		Integer userId = StringUtil.stringToInteger(id);;
		if(userId != null){
		
			Users user = manager.getUser(userId);		
			
			userEditForm.setId(id);      
			userEditForm.setName(user.getName());
			userEditForm.setUserName(user.getUserName());
			userEditForm.setPassword(user.getPassword());
			userEditForm.setRole(user.getRole());
			userEditForm.setEnabled(Short.toString(user.getEnabled()));
			userEditForm.setBirthday(user.getBirthday());
			userEditForm.setCardId(user.getCardId());
			userEditForm.setPhoneNumber1(user.getPhoneNumber1());
			userEditForm.setPhoneNumber2(user.getPhoneNumber2());
			userEditForm.setPhoneNumber3(user.getPhoneNumber3());
			userEditForm.setAddress(user.getAddress());
			userEditForm.setEducation(user.getEducation());
			userEditForm.setDuty(user.getDuty());
			
		}
		return mapping.findForward("init");
	}
	
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserEditForm userEditForm = (UserEditForm) form;// TODO Auto-generated method stub
		
		Users user = new Users();
		
		user.setId(StringUtil.stringToInteger(userEditForm.getId()));      
		user.setName(userEditForm.getName());
		user.setUserName(userEditForm.getUserName());
		user.setPassword(userEditForm.getPassword());
		user.setRole(userEditForm.getRole());
		user.setEnabled(StringUtil.stringToShort(userEditForm.getEnabled()));
		user.setBirthday(userEditForm.getBirthday());
		user.setCardId(userEditForm.getCardId());
		user.setPhoneNumber1(userEditForm.getPhoneNumber1());
		user.setPhoneNumber2(userEditForm.getPhoneNumber2());
		user.setPhoneNumber3(userEditForm.getPhoneNumber3());
		user.setAddress(userEditForm.getAddress());
		user.setEducation(userEditForm.getEducation());
		user.setDuty(userEditForm.getDuty());
		
		manager.sava(user);
		return mapping.findForward(success);
	}
	
	public ActionForward userSetup(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserEditForm userEditForm = (UserEditForm) form;// TODO Auto-generated method stub
		
		HttpSession session  = request.getSession();
		
		Users user = (Users)session.getAttribute("user");
		if(user != null){
		
			
			userEditForm.setName(user.getName());
			userEditForm.setUserName(user.getUserName());
			userEditForm.setPassword(user.getPassword());
			userEditForm.setRole(user.getRole());
			userEditForm.setEnabled(Short.toString(user.getEnabled()));
			userEditForm.setBirthday(user.getBirthday());
			userEditForm.setCardId(user.getCardId());
			userEditForm.setPhoneNumber1(user.getPhoneNumber1());
			userEditForm.setPhoneNumber2(user.getPhoneNumber2());
			userEditForm.setPhoneNumber3(user.getPhoneNumber3());
			userEditForm.setAddress(user.getAddress());
			userEditForm.setEducation(user.getEducation());
			userEditForm.setDuty(user.getDuty());
			
		}
		return mapping.findForward("userSetup");
	}
	
	public ActionForward setup(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserEditForm userEditForm = (UserEditForm) form;// TODO Auto-generated method stub
		
		String id = userEditForm.getId();      
		
		String newUserName = userEditForm.getNewUserName();
		String userName = userEditForm.getUserName();
		String oldPassword = userEditForm.getOldPassword();
		String newPassword = userEditForm.getNewPassword();
		String repeatPassword = userEditForm.getRepeatPassword();
		
		if(userName == null || userName.equals("")){
			request.setAttribute("message", "Œ¥µ«¬º!");
			return mapping.findForward("message");
		}
		
		if( oldPassword == null || oldPassword.equals("")){
			
			request.setAttribute("message", "«Î ‰»Îµ±«∞√‹¬Î!");
			return mapping.findForward("message");
		}
		
		if(!newPassword.equals(repeatPassword)){
			
			request.setAttribute("message", "√‹¬Î≤ª“ª÷¬!");
			return mapping.findForward("message");
		}
		
		Users user = new Users();
		user = manager.loginValidate(userName,oldPassword);
		
		if(user != null){
			if(newUserName != null && !newUserName.equals("")){
				user.setUserName(newUserName);
			}     
			if(newPassword != null && !newPassword.equals("")){
				user.setPassword(newPassword);
			}
			manager.sava(user);
			request.setAttribute("message", "±£¥Ê≥…π¶!");
			return mapping.findForward("message");
		}
		
		
		request.setAttribute("message", "√‹¬Î¥ÌŒÛ!");
		
		return mapping.findForward("message");
	}
}







