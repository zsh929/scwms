/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sclk.scwms.web.action;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.sclk.scwms.common.ConfigUtil;
import com.sclk.scwms.common.DateUtil;
import com.sclk.scwms.common.StringUtil;
import com.sclk.scwms.model.Customer;
import com.sclk.scwms.model.MonthTotal;
import com.sclk.scwms.service.CargoManager;
import com.sclk.scwms.service.CustomerManager;
import com.sclk.scwms.service.StockRecordManager;
import com.sclk.scwms.vo.CargoVO;
import com.sclk.scwms.web.form.DailyBalanceForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-06-2010
 * 
 * XDoclet definition:
 * @struts.action path="/stockItems" name="stockItemsForm" input="/jsp/stockItems.jsp" scope="request" validate="true"
 */
public class DailyBalanceAction extends BaseAction {
	
	private StockRecordManager stockRecordManager;

    public void setStockRecordManager(StockRecordManager manager) {
    	this.stockRecordManager = manager;
    }
    
    private CustomerManager customerManager;

    public void setCustomerManager(CustomerManager manager) {
    	this.customerManager = manager;
    }
    
    private CargoManager cargoManager;

    public void setCargoManager(CargoManager manager) {
    	this.cargoManager = manager;
    }
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward view(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DailyBalanceForm dailyBalanceForm = (DailyBalanceForm) form;// TODO Auto-generated method stub
		
		String customerId = request.getParameter("customerId");
		String cargoId = request.getParameter("cargoId");
		String month = request.getParameter("month");
		
		
		String sDate = new String();
		String eDate = new String();
		Date d = new Date();
		Date md = new Date();
		
		if(month != null){
			d = DateUtil.stringToDate("yyyyMM", month);
			
		}
		
		Calendar  ca = Calendar.getInstance();
		
		ca.setTime(d);
		ca.add(Calendar.MONTH, -1);
		md = ca.getTime();
		
		ca.set(Calendar.DAY_OF_MONTH, 21);
		sDate = DateUtil.datetimeToStr("yyyy-MM-dd", ca.getTime());
		
		ca.add(Calendar.MONTH, 1);
		ca.set(Calendar.DAY_OF_MONTH, 20);
		eDate = DateUtil.datetimeToStr("yyyy-MM-dd", ca.getTime());
		
		
		Customer c = customerManager.getCustomer(StringUtil.stringToInteger(customerId));
		List<CargoVO> cargoesList = cargoManager.getCargoVOByCustomer(customerId);
		
		Integer cId = StringUtil.stringToInteger(cargoId);
		
		CargoVO currentCargo = new CargoVO();
		List stockRecordList = new ArrayList();
		MonthTotal monthTotal = new MonthTotal();
		if(cargoesList != null && cargoesList.size() > 0 && cId != null){
			currentCargo = cargoManager.getCargoVO(cargoManager.getCargo(cId));
			stockRecordList = stockRecordManager.get(customerId, cargoId, sDate, eDate);
			
			monthTotal = cargoManager.getMonthTotal(c,DateUtil.stringToDate(sDate),currentCargo.getId());
			
			
		}else if(cId == null && cargoesList != null && cargoesList.size() > 0 ){
			currentCargo = cargoesList.get(0);
			stockRecordList = stockRecordManager.get(customerId, currentCargo.getId().toString(), sDate, eDate);
			
			monthTotal = cargoManager.getMonthTotal(c,DateUtil.stringToDate(sDate),currentCargo.getId());
			
			
		}
		
		
		request.setAttribute("customer", c);
		request.setAttribute("stockRecord.list", stockRecordList);
		request.setAttribute("cargoes.list", cargoesList);
		request.setAttribute("currentCargo", currentCargo);
		request.setAttribute("month", d);
		request.setAttribute("monthTotal", monthTotal);
		request.setAttribute("monthList", ConfigUtil.getMonthList());
		
		return mapping.findForward("view");
	}
}