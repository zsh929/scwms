/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sclk.scwms.web.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.ws.Response;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.sclk.scwms.common.DateUtil;
import com.sclk.scwms.common.JsonUtil;
import com.sclk.scwms.common.StringUtil;
import com.sclk.scwms.model.Charge;
import com.sclk.scwms.model.ChargeDetail;
import com.sclk.scwms.model.Customer;
import com.sclk.scwms.service.ChargeManager;
import com.sclk.scwms.service.CustomerManager;
import com.sclk.scwms.vo.CargoRecordItemsVO;
import com.sclk.scwms.vo.ChargeVO;
import com.sclk.scwms.web.form.ChargeDetailForm;
import com.sclk.scwms.web.form.ChargeForm;
import com.sclk.scwms.web.form.StockCustomerForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-21-2012
 * 
 * XDoclet definition:
 * @struts.action path="/chargeDetail" name="chargeDetailForm" input="/jsp/chargeDetail.jsp" scope="request" validate="true"
 */
public class ChargeDetailAction extends BaseAction {
	
	 private ChargeManager chargeManager;

    public void setChargeManager(ChargeManager chargeManager) {
    	this.chargeManager = chargeManager;
    }
    
    private CustomerManager customerManager;

    public void setManager(CustomerManager customerManager) {
    	this.customerManager = customerManager;
    }

	
	/*
	 * Generated Methods
	 */
	
	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// chargeForm = (ChargeForm) form;// TODO Auto-generated method stub
		
		//List list = chargeManager.getCharges();
		
		//request.setAttribute("charge.list", list);
		
		return mapping.findForward("init");
		
	}
	
	public ActionForward getChargeList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		String customerId = request.getParameter("customerId");
		String chargeMethodId = request.getParameter("chargeMethod");
		List<ChargeVO> chargeVOList = new ArrayList<ChargeVO>();
		List<ChargeVO> list = chargeManager.getChargeVOList(customerId,"");
		String[] typeArr = {"chargeType.4","chargeType.5","chargeType.6","chargeType.7"};
		for(ChargeVO chargeVO:list){
			String type = chargeVO.getType();
			String chargeMethod = "";
			if(chargeVO.getChargeMethod() != null){
				chargeMethod = chargeVO.getChargeMethod().toString();
			}
			
			boolean i = false;
			for(String s:typeArr ){
				if(type.equals(s) && (chargeMethod.equals(chargeMethodId) || chargeMethod.equals("2"))){
					i = true;
					break;
				}
			}
			
			if(i){
				chargeVOList.add(chargeVO);
				
			}
		}
		
		String chargeListStr = JsonUtil.list2json(chargeVOList);
		
		  PrintWriter out = response.getWriter();  
		  out.write(chargeListStr);  
	        out.flush();  
	        out.close();  
		return null;
		
	}
	
	public ActionForward query(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ChargeDetailForm chargeDetailForm = (ChargeDetailForm) form;
		String customerId  = request.getParameter("customerId");
		
		Customer customer = customerManager.getCustomer(StringUtil.stringToInteger(customerId));
				
		List list = chargeManager.getChargeDetailList(StringUtil.stringToInteger(customerId));
		
		String payable = "0.00";
		payable = chargeManager.getPayable(StringUtil.stringToInteger(customerId));
		
		request.setAttribute("chargeDetail.list",list);
		request.setAttribute("customerId",customerId);
		request.setAttribute("customer",customer);
		request.setAttribute("payable",payable);
		
		return mapping.findForward("query");
		
	}
	
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ChargeDetailForm chargeDetailForm = (ChargeDetailForm) form;
		String a = request.getParameter("name");
		String c[] = a.split("\\|");
		
		double totalPrice1 = 0;
		
		for(int i = 0;i < c.length;i++){
			String str[] = c[i].split("\\,");
			
			String customerId = str[0];
			String chargeId = str[1];
			String date = str[2]; 
			String chargeDetailDescription = str[3];
			String chargeType = str[4];
			String startDate = str[5];
			String endDate = str[6]; 
			String weight = str[7]; 
			String area = str[8];
			String unitPrice = str[9];
			String unitName = str[10]; 
			String totalPrice = str[11];
			
			totalPrice1 = totalPrice1 + Double.parseDouble(totalPrice);
			
			
			ChargeDetail chargeDetail = new ChargeDetail();
			
			chargeDetail.setCustomerId(StringUtil.stringToInteger(customerId));
			chargeDetail.setChargeId(StringUtil.stringToInteger(chargeId));
			chargeDetail.setDate(DateUtil.stringToDate("yyyy-MM", date));
			chargeDetail.setType(0);
			chargeDetail.setDescription(chargeDetailDescription);
			chargeDetail.setChargeType(chargeType);
			chargeDetail.setStartDate(DateUtil.stringToDate("yyyy-MM-dd",startDate));
			chargeDetail.setEndDate(DateUtil.stringToDate("yyyy-MM-dd",endDate));
			chargeDetail.setWeight(weight);
			chargeDetail.setArea(area);
			chargeDetail.setUnitPrice(unitPrice);
			chargeDetail.setUnitName(unitName);
			chargeDetail.setTotalPrice(totalPrice);
			chargeDetail.setPayable("0");
			chargeManager.confirm(chargeDetail);
			
			
		}
		 
		return null;
		
	}
	
	public ActionForward edit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ChargeDetailForm chargeDetailForm = (ChargeDetailForm) form;
		String a = request.getParameter("name");
		String c[] = a.split("\\|");
		
		double totalPrice1 = 0;
		
		for(int i = 0;i < c.length;i++){
			String str[] = c[i].split("\\,");
			
			String customerId = str[0];
			String chargeId = str[1];
			String date = str[2]; 
			String chargeDetailDescription = str[3];
			String startDate = str[4];
			String endDate = str[5]; 
			String weight = str[6]; 
			String area = str[7];
			String unitPrice = str[8];
			String unitName = str[9]; 
			String totalPrice = str[10];
			
			totalPrice1 = totalPrice1 + Double.parseDouble(totalPrice);
			
			
			ChargeDetail chargeDetail = new ChargeDetail();
			
			chargeDetail.setCustomerId(StringUtil.stringToInteger(customerId));
			chargeDetail.setChargeId(StringUtil.stringToInteger(chargeId));
			chargeDetail.setDate(DateUtil.stringToDate("yyyy-MM-dd", date));
			chargeDetail.setType(0);
			//chargeDetail.setDescription(chargeDetailDescription);
			chargeDetail.setStartDate(DateUtil.stringToDate("yyyy-MM-dd",startDate));
			chargeDetail.setEndDate(DateUtil.stringToDate("yyyy-MM-dd",endDate));
			//chargeDetail.setWeight(weight);
			//chargeDetail.setArea(area);
			//chargeDetail.setUnitPrice(unitPrice);
			//chargeDetail.setUnitName(unitName);
			//chargeDetail.setTotalPrice(totalPrice);
			//chargeDetail.setPayable("0");
			chargeManager.delete(chargeDetail);
			
			
		}
		 
		 PrintWriter out = null;
		 try {
			out = response.getWriter();
			out.print(totalPrice1);
			out.flush();
			out.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return null;
		
	}
	
	public ActionForward initPayment(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ChargeDetailForm chargeDetailForm = (ChargeDetailForm) form;
		Date date = new Date();
		chargeDetailForm.setPaymentDate(DateUtil.dateToString("yyyy-MM-dd", date));
		
		return mapping.findForward("initPayment");
		
	}
	
	public ActionForward payment(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ChargeDetailForm chargeDetailForm = (ChargeDetailForm) form;
		
		ChargeDetail chargeDetail = new ChargeDetail();
		
		chargeDetail.setCustomerId(StringUtil.stringToInteger(chargeDetailForm.getCustomerId()));
		chargeDetail.setTotalPrice("-" + chargeDetailForm.getPaymentAmount());
		chargeDetail.setDate(DateUtil.stringToDate(chargeDetailForm.getPaymentDate()));
		chargeDetail.setType(ChargeDetail.payment);
		
		chargeManager.payment(chargeDetail);
		
		
		return new ActionForward("/chargeDetail.do?method=query&customerId="+chargeDetailForm.getCustomerId(),true);
		
	}
	
	public ActionForward initCreateChargeDetailRecord(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ChargeDetailForm chargeDetailForm = (ChargeDetailForm) form;
		
		String customerId  = request.getParameter("customerId");		
		String date  = request.getParameter("date");		
		chargeDetailForm.setCustomerId(customerId);
		chargeDetailForm.setDate(date);
		
		return mapping.findForward("initCreateChargeDetailRecord");
		
	}
	
	public ActionForward createChargeDetailRecord(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		ChargeDetailForm chargeDetailForm = (ChargeDetailForm) form;
		
		ChargeDetail chargeDetail = new ChargeDetail();
		
		chargeDetail.setCustomerId(StringUtil.stringToInteger(chargeDetailForm.getCustomerId()));
		chargeDetail.setDate(DateUtil.stringToDate("yyyy-MM",chargeDetailForm.getPaymentDate()));
		
		chargeDetail.setDescription(chargeDetailForm.getDescription());
		chargeDetail.setTotalPrice(chargeDetailForm.getTotalPrice());
		
		chargeManager.sava(chargeDetail);
		
		
		return new ActionForward("/chargeDetail.do?method=query&customerId="+chargeDetailForm.getCustomerId(),true);
		
		
	}
	
}